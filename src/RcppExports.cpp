// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// perturb_cells_cpp
IntegerMatrix perturb_cells_cpp(IntegerMatrix count_matrix, IntegerVector damaged_cell_selections, NumericVector damage_levels, IntegerVector non_mito_idx, IntegerVector ribo_idx, double ribosome_penalty, int seed);
RcppExport SEXP _DamageDetective_perturb_cells_cpp(SEXP count_matrixSEXP, SEXP damaged_cell_selectionsSEXP, SEXP damage_levelsSEXP, SEXP non_mito_idxSEXP, SEXP ribo_idxSEXP, SEXP ribosome_penaltySEXP, SEXP seedSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerMatrix >::type count_matrix(count_matrixSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type damaged_cell_selections(damaged_cell_selectionsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type damage_levels(damage_levelsSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type non_mito_idx(non_mito_idxSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ribo_idx(ribo_idxSEXP);
    Rcpp::traits::input_parameter< double >::type ribosome_penalty(ribosome_penaltySEXP);
    Rcpp::traits::input_parameter< int >::type seed(seedSEXP);
    rcpp_result_gen = Rcpp::wrap(perturb_cells_cpp(count_matrix, damaged_cell_selections, damage_levels, non_mito_idx, ribo_idx, ribosome_penalty, seed));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_DamageDetective_perturb_cells_cpp", (DL_FUNC) &_DamageDetective_perturb_cells_cpp, 7},
    {NULL, NULL, 0}
};

RcppExport void R_init_DamageDetective(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
