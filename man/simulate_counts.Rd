% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simulate_counts.R
\name{simulate_counts}
\alias{simulate_counts}
\title{simulate_counts}
\usage{
simulate_counts(
  count_matrix,
  damage_proportion,
  annotated_celltypes = FALSE,
  target_damage = c(0.1, 0.8),
  damage_distribution = "right_skewed",
  damage_steepness = "moderate",
  beta_shape_parameters = NULL,
  ribosome_penalty = 0.01,
  save_plot = tempdir(),
  plot_type = "png",
  organism = "Hsap"
)
}
\arguments{
\item{count_matrix}{Matrix or dgCMatrix containing the counts from
single cell RNA sequencing data.}

\item{damage_proportion}{Numeric describing what proportion
of the input data should be altered to resemble damaged data.
\itemize{
\item Must range between 0 and 1.
}}

\item{annotated_celltypes}{Boolean specifying whether input matrix has
cell type information stored.
\itemize{
\item Default is FALSE
}}

\item{target_damage}{Double numeric specifying the upper and lower range of
the level of damage that will be introduced.

Here, damage refers to the amount of cytoplasmic RNA lost by a cell where
values closer to 1 indicate more loss and therefore more heavily damaged
cells.
\itemize{
\item Default is c(0.1, 0.8)
}}

\item{damage_distribution}{String specifying whether the distribution of
damage levels among the damaged cells should be shifted towards the
upper or lower range of damage specified in 'target_damage' or follow
a symmetric distribution between them. There are three valid options:
\itemize{
\item "right_skewed"
\item "left_skewed"
\item "symmetric"
\item Default is c(0.1, 0.8)
}}

\item{damage_steepness}{String specifying how concentrated the spread of
damaged cells are about the mean of the target distribution specified in
'target_damage'. Here, an increase in steepness manifests in a more
apparent skewness.There are three valid options:
\itemize{
\item "shallow"
\item "moderate"
\item "steep"
\item Default is "moderate"
}}

\item{beta_shape_parameters}{Numeric vector that allows for the shape
parameters of the beta distribution to defined explicitly. This offers
greater flexibility than allowed by the 'damage_distribution' and
'damage_steepness' parameters and will override the defaults they
offer.
\itemize{
\item Default is 'NULL'
}}

\item{ribosome_penalty}{Numeric specifying the factor by which the
probability of loosing a transcript from a ribosomal gene is multiplied by.
Here, values closer to 0 represent a greater penalty. We highly recommend
using values less than or equal to the suggested default as being more
permissing of ribosomal loss leads to extensive reduction in ribosomal
proportions that are not observed in real single cell data.
\itemize{
\item Default is 0.01.
}}

\item{save_plot}{String specifying the directory where the output QC plot can
be stored. QC plots will be generated by default as we recommend verifying
the perturbed data retains characteristics of true single cell data. To
prevent plotting, use 'NULL'.
\itemize{
\item Default is the temp.dir().
}}

\item{plot_type}{String specifying what type of image format the plot
should be saved as. There are two options,
\itemize{
\item 'png'
\item 'svg'
\item Default is 'png'.
}}

\item{organism}{String specifying the organism of origin of the input
data where there are two standard options,
\itemize{
\item "Hsap"
\item "Mmus"
}

If a user wishes to use a non-standard organism they must input a list
containing strings for the patterns to match mitochondrial and ribosomal
genes of the organism. If available, nuclear-encoded genes that are likely
retained in the nucleus, such as in nuclear speckles, must also
be specified. An example for humans is below,
\itemize{
\item organism = c(mito_pattern = "^MT-",
ribo_pattern = "^(RPS|RPL)",
nuclear <- c("NEAT1","XIST", "MALAT1")
\item Default is "Hsap"
}}
}
\value{
A list containing the altered count matrix, a data frame with summary
statistics, and, if specified, a 'ggplot2' object of the quality control
metrics of the alteration.
}
\description{
Introduce cells with a damage-like gene expression profile into
existing single cell data by perturbing a target proportion of the existing
cells. Here, we define a damaged cell as that which has experienced a loss
in cytoplasmic RNA. Cells with a greater loss are assumed to be more
extensively damaged than cells where little RNA has been lost.
}
\examples{
data("test_counts", package = "DamageDetective")

simulated_damage <- simulate_counts(
count_matrix = test_counts,
damage_proportion = 0.5,
ribosome_penalty = 0.5,
target_damage = c(0.5, 0.9)
)
}
