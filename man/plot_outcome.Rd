% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_outcome.R
\name{plot_outcome}
\alias{plot_outcome}
\title{plot_outcome}
\usage{
plot_outcome(
  data,
  x,
  y,
  altered = FALSE,
  mito_ribo = FALSE,
  damage_column = "Damaged_Level",
  target_damage = c(0.1, 0.8),
  palette = c("grey", "#7023FD", "#78C2AD")
)
}
\arguments{
\item{data}{Data frame containing summary statistics}

\item{x}{Column name of the input data frame containing the values to be
plotted on the x axis of the scatter plot.}

\item{y}{Column name of the input data frame containing the values to be
plotted on the y axis of the scatter plot.}

\item{altered}{Boolean specifying whether the plot will be focusing on the
data before or after alteration.
\itemize{
\item Default is FALSE.
}}

\item{mito_ribo}{Boolean specifying whether mitochondrial and ribosomal
proportions are being plotted.}

\item{damage_column}{Column name of the input data frame containing the
values to use for colouring each point in the plot.}

\item{target_damage}{Numeric vector specifying the range of target damage
levels that}

\item{palette}{String specifying the three colours that will be used to
create the continuous colour palette for colouring the 'damage_column'.}
}
\value{
'ggplot2' object
}
\description{
Generates a scatter plot using the summary statistics of the damage
perturbation.
}
\examples{
set.seed(42)  # For reproducibility
library(ggplot2)

# Generate example an example data frame
df <- data.frame(
 Features = runif(1000, 0, 6000),
 Mt.percent = runif(1000, 0, 1),
 Damaged_Level = runif(1000, 0, 1)
)

plot <- plot_outcome(
 data = df,
 x = "Features",
 y = "Mt.percent",
 damage_column = "Damaged_Level"
)
}
